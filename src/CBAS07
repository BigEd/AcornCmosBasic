;   FILE  -> CBAS07
;   FCON converts from floating point to a string in stracc
FCONHX TYA
 BPL FCONHF
 JSR IFIX
FCONHF LDXIM 0
 LDYIM 0
HEXPLP LDAAY IACCL
 PHA
 ANDIM &0F
 STAAX WORK+8
 PLA
 LSRA
 LSRA
 LSRA
 LSRA
 INX
 STAAX WORK+8
 INX
 INY
 CPYIM 4
 BNE HEXPLP
HEXLZB DEX
 BEQ HEXP
 LDAAX WORK+8
 BEQ HEXLZB
HEXP LDAAX WORK+8
 CMPIM &0A
 BCC NOTHX
 ADCIM &06
NOTHX ADCIM &30
 JSR CHTOBF
 DEX
 BPL HEXP
 RTS
FPRTA BPL FPRTC
 LDAIM "-"
 CLR FACCS
 JSR CHTOBF
FPRTC LDA FACCX
 CMPIM &81 ;get into range 1.0000 to 9.9999
 BCS FPRTD
 JSR FTENFX
 DEC FPRTDX
 BRA FPRTC
FCON LDX VARL+2 ;flag forcing E
 CPXIM 3
 BCC FCONOK
 LDXIM 0 ;Default to G format
FCONOK STX WORK
 LDA VARL+1
 BEQ FCONC
 CMPIM &0A
 BCS FCONA
;  In G,E formats varl is no. of sig figs >0
;  In F format it is no. of decimals and can e >=0
 BRA FCONB
FCONC CPXIM 2
 BEQ FCONB
FCONA LDAIM 10 ;enter here for str$, having set work to 0
FCONB STA WORK+1
 STA FDIGS
 CLR CLEN
 CLR FPRTDX
 BIT PRINTF
 BMI FCONHX
 TYA
 BMI FCONFX
 JSR IFLT
FCONFX JSR FTST
 BNE FPRTA
 LDA WORK
 BNE FPRTHJ
 LDAIM "0"
 JMP CHTOBF
FPRTHJ JMP FPRTHH
FPRTEE JSR FONE
 BRA FPRTE+3
FPRTD CMPIM &84 ;EXPONENT OF 9.99
 BCC FPRTF ;1.0 TO 7.9999 ALL OK
 BNE FPRTE ;EXPONENT 85 OR MORE
 LDA FACCMA ;FINE CHECK IF X=84
 CMPIM &A0
 BCC FPRTF ;8.0000 TO 9.9999
FPRTE JSR FTENFQ
 INC FPRTDX
 BRA FPRTC
FPRTF LDA FACCMG
 STA TYPE
 JSR STARGA
 LDA FDIGS
 STA WORK+1
 LDX WORK
 CPXIM 2
 BNE FPRTFH ;NOT 'F' FORMAT
 ADC FPRTDX ;FIX UP THE PRECISION
 BMI FPRTZR
 STA WORK+1
 CMPIM 11
 BCC FPRTFH ;PRECISION STILL REASONABLE
 LDAIM 10
 STA WORK+1
 CLR WORK ;TREAT AS 'G' FORMAT
FPRTFH JSR FCLRB
 LDAIM &A0
 STA FACCMA
 LDAIM &83
 STA FACCX ;5.0 -> ACC
 LDX WORK+1
 BEQ FPRTGJ
FPRTGG JSR FTENFQ
 DEX
 BNE FPRTGG ;create .00,,005 const
FPRTGJ JSR ARGA
 JSR FLDW
 LDA TYPE
 STA FWRKMG
 JSR FADDW1
FPRTFF LDA FACCX
 CMPIM &84
 BCS FPRTG
 ROR FACCMA ;could call end of ftenfx
 ROR FACCMB
 ROR FACCMC
 ROR FACCMD
 ROR FACCMG
 INC FACCX
 BNE FPRTFF
FPRTG LDA FACCMA
 CMPIM &A0 ;SEE IF UNNORMALIZED
 BCS FPRTEE ;FIX UP IF SO
 LDA WORK+1
 BNE FPRTH
FPRTHH CMPIM 1
 BEQ FPRTK
FPRTZR JSR FCLR
 CLR FPRTDX
 LDA FDIGS
 INA
 STA WORK+1
; THE EXPONENT IS $84, SO THE TOP DIGIT OF THE ACC IS THE FIRST DIG TO PRINT
FPRTH LDAIM 1
 CMP WORK
 BEQ FPRTK
 LDY FPRTDX
 BMI FPRTKK
 CPY WORK+1
 BCS FPRTK ;USE SCIENTIFIC IS <1.0 OR > 10^DIGITS
 CLR FPRTDX ;USE F TYPE FORMAT
 INY
 TYA
 BNE FPRTK
FPRTKK LDA WORK
 CMPIM 2
 BEQ FPRTKL ;F FORMAT CASE
 LDAIM 1
 CPYIM &FF
 BNE FPRTK ;SET E FORMAT
FPRTKL LDAIM "0"
 JSR CHTOBF
 LDAIM "."
 JSR CHTOBF
 LDAIM "0"
FPRTKM INC FPRTDX
 BEQ FPRTKN
 JSR CHTOBF
 BRA FPRTKM
FPRTKN LDAIM &80
FPRTK STA FPRTWN
FPRTI JSR FPRTNN
 DEC FPRTWN
 BNE FPRTL
 LDAIM "."
 JSR CHTOBF
FPRTL DEC WORK+1
 BNE FPRTI
 LDY WORK
 DEY
 BEQ FPRTTX
 DEY
 BEQ FPRTTY+2
 LDY CLEN
FPRTTZ DEY
 LDAAY STRACC ;inspect for and remove trailing zeroes
 CMPIM "0"
 BEQ FPRTTZ
 CMPIM "."
 BEQ FPRTTY
 INY
FPRTTY STY CLEN
 LDA FPRTDX
 BEQ FPRTX ;EXPONENT=0
FPRTTX LDAIM "E"
 JSR CHTOBF
 LDA FPRTDX
 BPL FPRTJ
 LDAIM "-"
 JSR CHTOBF
 SEC
 LDAIM 0
 SBC FPRTDX
FPRTJ JSR IPRT
 LDA WORK
 BEQ FPRTX
 LDAIM " "
 LDY FPRTDX
 BMI FPRTTW
 JSR CHTOBF
FPRTTW CPXIM 0
 BEQ CHTOBF
FPRTX RTS
FPRTNN LDA FACCMA
 LSRA
 LSRA
 LSRA
 LSRA
 JSR FPRTDG
 LDAIM &F0
 TRB FACCMA
;   GET NEXT DIGIT READY by multiplying mantissa by 10
;   MULTIPLY FACC BY 10
FTENX PHA
 LDX FACCMD
 LDA FACCMA
 PHA
 LDA FACCMB
 PHA
 LDA FACCMC
 PHA
 LDA FACCMG
 ASLA
 ROL FACCMD
 ROL FACCMC
 ROL FACCMB
 ROL FACCMA
 ASLA
 ROL FACCMD
 ROL FACCMC
 ROL FACCMB
 ROL FACCMA
 ADC FACCMG
 STA FACCMG
 TXA
 ADC FACCMD
 STA FACCMD
 PLA
 ADC FACCMC
 STA FACCMC
 PLA
 ADC FACCMB
 STA FACCMB
 PLA
 ADC FACCMA
 ASL FACCMG
 ROL FACCMD
 ROL FACCMC
 ROL FACCMB
 ROLA
 STA FACCMA
 PLA
 RTS
;   PRINT AC IN DECIMAL UNSIGNED
IPRT LDXIM &FF
 SEC
IPRTA INX
 SBCIM 10
 BCS IPRTA
 ADCIM 10
 PHA
 TXA
 BEQ IPRTB
 JSR FPRTDG
IPRTB PLA
FPRTDG ORAIM "0"
CHTOBF PHX
 LDX CLEN
 STAAX STRACC
 PLX
 INC CLEN
 RTS
;   READ ROUTINES
FRDDXX JSR FTSTZ ;clear rest of FACC
 CLC
 LDAIM &FF
 RTS
FRDD CLR FACCMA
 CLR FACCMB
 CLR FACCMC
 CLR FACCMD
 CLR FACCMG
 CLR FRDDDP ;DECIMAL POINT FLAG
 CLR FRDDDX ;DECIMAL EXPONENT
 CMPIM "." ;Y pointing to this character
 BEQ FRDDDD ;LEADING DECIMAL POINT
 CMPIM &3A
 BCS FRDDXX
 SBCIM &2F
 BMI FRDDXX
 STA FACCMG
 INY
 LDAIY AELINE
 CMPIM &3A
 BCS FRDDD
 SBCIM &2F
 BCC FRDDC+1
 STA FACCS
 LDA FACCMG
 ASLA
 ASLA
 ADC FACCMG
 ASLA
 ADC FACCS
 STA FACCMG
FRDDC INY
 LDAIY AELINE
 CMPIM "."
 BNE FRDDD
FRDDDD LDA FRDDDP ;SEEN BEFORE?
 BNE FRDDQ ;SECOND ONE IS END OF NUMBER
 INC FRDDDP ;SET FLAG
 BRA FRDDC ;GET MORE CHARS
FRDDD CMPIM "E"
 BEQ FRDDEX ;START OF EXPONENT
 CMPIM &3A
 BCS FRDDQ
 SBCIM &2F
 BCC FRDDQ ;END OF NUMBER
 LDX FACCMA
 CPXIM &18
 BCC FRDDE ;LENGTH OK
 LDX FRDDDP
 BNE FRDDC ;JUST IGNORE IF AFTER .
 INC FRDDDX ;OTHERWISE INC TENS
 BRA FRDDC
FRDDE LDX FRDDDP
 BEQ FRDDF ;NO . YET
 DEC FRDDDX
FRDDF JSR FTENX ;MULTIPLY MANTISSA (carry!!!!!)
 ADC FACCMG
 STA FACCMG
 BCC FRDDC
 INC FACCMD
 BNE FRDDC
 INC FACCMC
 BNE FRDDC
 INC FACCMB
 BNE FRDDC
 INC FACCMA
 BRA FRDDC
FRDDEX JSR IRDD
 ADC FRDDDX
 STA FRDDDX
FRDDQ STY AECUR
 LDA FRDDDX
 ORA FRDDDP
 BEQ FRINT
 JSR FTST ;WAS IT ZERO?
 BEQ FRDDZZ ;IF SO EXIT AT ONCE
FRFP LDAIM &A8
 STA FACCX
 CLR FACCXH
 CLR FACCS
 JSR FNRM
;   NOW I HAVE TO MULT OR DIV BY POWER OF TEN GIVEN IN FRDDDX
 LDA FRDDDX
 BMI FRDDM
 BEQ FRDDZ
FRDDP JSR FTENFX ;TIMES 10.0
 DEC FRDDDX
 BNE FRDDP
 BRA FRDDZ
FRDDM JSR FTENFQ ;DIVIDE 10.0
 INC FRDDDX
 BNE FRDDM
FRDDZ JSR FTIDY ;ROUND, CHECK OVERFLOW
FRDDZZ SEC
 LDAIM &FF
 RTS
FRINT LDA FACCMB
 STA IACCH
 ANDIM &80
 ORA FACCMA
 BNE FRFP
 LDA FACCMG
 STA IACCL
 LDA FACCMD
 STA IACCM
 LDA FACCMC
 STA IACCN
 LDAIM &40
 SEC
 RTS
IRDDB JSR IRDDC
 EORIM &FF
 SEC
 RTS
IRDD INY
 LDAIY AELINE
 CMPIM "-"
 BEQ IRDDB
 CMPIM "+"
 BNE IRDDA
IRDDC INY
 LDAIY AELINE
IRDDA CMPIM &3A
 BCS IRDDOW
 SBCIM &2F
 BCC IRDDOW
 STA FRDDW
 INY
 LDAIY AELINE
 CMPIM &3A
 BCS IRDDQ
 SBCIM &2F
 BCC IRDDQ
 INY
 STA FTMPMA
 LDA FRDDW
 ASLA
 ASLA
 ADC FRDDW
 ASLA
 ADC FTMPMA
 RTS
IRDDQ LDA FRDDW
 CLC
 RTS
IRDDOW LDAIM 0
 CLC
 RTS
;   FTST SETS N,Z FLAGS ON ACC, TIDIES UP AC IF ZERO
FTST LDA FACCMA
 ORA FACCMB
 ORA FACCMC
 ORA FACCMD
 ORA FACCMG
 BEQ FTSTZ ;IT IS ZERO
 LDA FACCS
 BNE FTSTR
 INA ;A was 0 so = 1. NEEDED TO FORCE..
 RTS ;.. NONZERO IF SIGN BYTE
FTSTZ CLR FACCS
 CLR FACCX
 CLR FACCXH ;STANDARD STATE ZERO
FTSTR RTS
FTOW LDA FACCS
 STA FWRKS
 LDA FACCX
 STA FWRKX
 LDA FACCMA
 STA FWRKMA
 LDA FACCMB
 STA FWRKMB
 LDA FACCMC
 STA FWRKMC
 LDA FACCMD
 STA FWRKMD
 LDA FACCMG
 STA FWRKMG
 RTS
FTOWAS JSR FTOW
FASRW LSR FWRKMA
 ROR FWRKMB
 ROR FWRKMC
 ROR FWRKMD
 ROR FWRKMG
 RTS
;   MULT AC BY 10.0
;   FX:=FX+3
;   FW:=FACC
;   FW:=FW>>2
;   FACC:=FACC+FW
;   IF CARRY THEN $(
;     FACC:=FACC>>1;
;     FX:=FX+1 $)
FTENFX CLC
 LDA FACCX
 ADCIM 3
 STA FACCX
 BCC FTENFA
 INC FACCXH
FTENFA JSR FTOWAS ;COPY TO W
 JSR FASRW
FPLWF;    ADD WRK+CY TO ACC, LEAVE RESULT IN ACC, DON'T DISTURB WRK
 LDA FACCMG
 ADC FWRKMG
 STA FACCMG
 LDA FACCMD
 ADC FWRKMD
 STA FACCMD
 LDA FACCMC
 ADC FWRKMC
 STA FACCMC
 LDA FACCMB
 ADC FWRKMB
 STA FACCMB
 LDA FACCMA
 ADC FWRKMA
 STA FACCMA
;   CY IS SET ON CARRY OUT OF FACCMA AND FWRKMA
FRENRM BCC FRENX
 ROR FACCMA
 ROR FACCMB
 ROR FACCMC
 ROR FACCMD
 ROR FACCMG
 INC FACCX
 BNE FRENX
 INC FACCXH
FRENX RTS
;   FTENFQ DIVIDE AC BY 10.0
;   FX:=FX-4; WRK:=ACC; WRK:=WRK>>1; ACC:=ACC+WRK
;   ADJUST IF CARRY
;   WRK:=ACC; WRK:=WRK>>4; ACC:=ACC+WRK
;   ADJUST IF CARRY
;   WRK:=ACC>>8; ACC:=ACC>>8
;   ADJUST IF CARRY
;   WRK:=ACC>>16; ACC:=ACC+WRK
;   ADJUST IF CARRY
;   ACC:=ACC+(ACC>>32)
;   ADJUST IF CARRY
FTENFQ SEC
 LDA FACCX
 SBCIM 4
 STA FACCX
 BCS FTENB
 DEC FACCXH
FTENB JSR FTOWAS
 JSR FPLWF ; * 0.00011
 JSR FTOWAS
 JSR FASRW
 JSR FASRW
 JSR FASRW
 JSR FPLWF  ;* 0.000110011
 CLR FWRKMA
 LDA FACCMA
 STA FWRKMB
 LDA FACCMB
 STA FWRKMC
 LDA FACCMC
 STA FWRKMD
 LDA FACCMD
 STA FWRKMG
 LDA FACCMG
 ROLA  ;SET CARRY BIT PROPERLY
 JSR FPLWF ;OK TO 16 BITS
 CLR FWRKMB ;FWRKMA already 0
 LDA FACCMA
 STA FWRKMC
 LDA FACCMB
 STA FWRKMD
 LDA FACCMC
 STA FWRKMG
 LDA FACCMD
 ROLA
 JSR FPLWF
 LDA FACCMB
 ROLA
 LDA FACCMA
 ADC FACCMG
 STA FACCMG
 BCC FPLNY
 INC FACCMD
 BNE FPLNY
FPLNFI INC FACCMC
 BNE FPLNY
 INC FACCMB
 BNE FPLNY
 INC FACCMA
 BEQ FRENRM+2;carry set
FPLNY RTS
FLDW CLR FWRKMG
 LDYIM 4
 LDAIY ARGP
 STA FWRKMD
 DEY
 LDAIY ARGP
 STA FWRKMC
 DEY
 LDAIY ARGP
 STA FWRKMB
 DEY
 LDAIY ARGP
 STA FWRKS
 TAY
 LDAI ARGP
 STA FWRKX
 BNE FLDWZ
 TYA
 ORA FWRKMB
 ORA FWRKMC
 ORA FWRKMD
 BEQ FLDWX
FLDWZ TYA
 ORAIM &80
FLDWX STA FWRKMA
 RTS
STARGC LDAIM FWSC
 BRA FSTAP
STARGA LDAIM FWSA
FSTAP STA ARGP
 LDAIM /FWSA
 STA ARGP+1
;   FSTA STORES ACC
FSTA LDA FACCX
 STAI ARGP
 LDYIM 1
 LDA FACCS ;TIDY UP SIGN BYTE
 EOR FACCMA
 ANDIM &80
 EOR FACCMA
 STAIY ARGP
 LDA FACCMB
 INY
 STAIY ARGP
 LDA FACCMC
 INY
 STAIY ARGP
 LDA FACCMD
 INY
 STAIY ARGP
 RTS
LDARGA LDAIM FWSA
FLDARG STA ARGP
 LDAIM /FWSA
 STA ARGP+1
FLDA CLR FACCMG
 CLR FACCXH
 LDYIM 4
 LDAIY ARGP
 STA FACCMD
 DEY
 LDAIY ARGP
 STA FACCMC
 DEY
 LDAIY ARGP
 STA FACCMB
 DEY
 LDAIY ARGP
 STA FACCS
 TAY
 LDAI ARGP
 STA FACCX
 BNE FLDAZ
 TYA
 ORA FACCMB
 ORA FACCMC
 ORA FACCMD
 BEQ FLDAX
FLDAZ TYA
 ORAIM &80
FLDAX STA FACCMA
 RTS
 LNK CBAS08
